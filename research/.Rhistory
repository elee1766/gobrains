install.packages("httpr")
install.packages("httr")
require(httr)
find_similar <- function(mbid) {
}
find_similar <- function(mbid) {
conf <- api_configs()
httr::GET(
conf[["labs_endpoint"]]+"similar-recordings/json",
accept_json(),
query = list(recording_mbids = mbid)
)
}
find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
api_configs <- function() {
conf <- new.env()
conf[["labs_endpoint"]] = "https://https://labs.api.listenbrainz.org/"
return(conf)
}
find_similar <- function(mbid) {
conf <- api_configs()
httr::GET(
conf[["labs_endpoint"]]+"similar-recordings/json",
accept_json(),
query = list(recording_mbids = mbid)
)
}
find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
find_similar <- function(mbid) {
conf <- api_configs()
httr::GET(
paste(conf[["labs_endpoint"]],"similar-recordings/json"),
accept_json(),
query = list(recording_mbids = mbid)
)
}
find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
api_configs <- function() {
conf <- new.env()
conf[["labs_endpoint"]] = "https://labs.api.listenbrainz.org/"
return(conf)
}
find_similar <- function(mbid) {
conf <- api_configs()
httr::GET(
paste(conf[["labs_endpoint"]],"similar-recordings/json"),
accept_json(),
query = list(recording_mbids = mbid)
)
}
find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
find_similar <- function(mbid) {
conf <- api_configs()
full_url <- paste(conf[["labs_endpoint"]],"similar-recordings/json"),
find_similar <- function(mbid) {
conf <- api_configs()
full_url <- paste(conf[["labs_endpoint"]],"similar-recordings/json")
print(full_url)
httr::GET(
full_url,
accept_json(),
query = list(recording_mbids = mbid)
)
}
find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
api_configs <- function() {
conf <- new.env()
conf[["labs_endpoint"]] = "https://labs.api.listenbrainz.org/"
return(conf)
}
find_similar <- function(mbid) {
conf <- api_configs()
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
print(full_url)
httr::GET(
full_url,
accept_json(),
query = list(recording_mbids = mbid)
)
}
find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
find_similar <- function(mbid, algo = "session_based_days_9000_session_300_contribution_5_threshold_15_limit_50_skip_30") {
conf <- api_configs()
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
print(full_url)
httr::GET(
full_url,
accept_json(),
query = list(
recording_mbids = mbid,
algorithm = algo,
)
)
}
find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
find_similar <- function(mbid, algo = "session_based_days_9000_session_300_contribution_5_threshold_15_limit_50_skip_30") {
conf <- api_configs()
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
print(full_url)
httr::GET(
full_url,
accept_json(),
query = list(
recording_mbids = mbid,
algorithm = algo,
)
)
}
find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
find_similar <- function(mbid, algo = "session_based_days_9000_session_300_contribution_5_threshold_15_limit_50_skip_30") {
conf <- api_configs()
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
print(full_url)
httr::GET(
full_url,
accept_json(),
query = list(
recording_mbids = mbid,
algorithm = algo
)
)
}
find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
require(httr)
api_configs <- function() {
conf <- new.env()
conf[["labs_endpoint"]] = "https://labs.api.listenbrainz.org/"
return(conf)
}
find_similar <- function(mbid, algo = "session_based_days_9000_session_300_contribution_5_threshold_15_limit_50_skip_30") {
conf <- api_configs()
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
resp <- httr::GET(
full_url,
accept_json(),
query = list(
recording_mbids = mbid,
algorithm = algo
)
)
print(resp)
}
find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
find_similar <- function(mbid, algo = "session_based_days_9000_session_300_contribution_5_threshold_15_limit_50_skip_30") {
conf <- api_configs()
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
resp <- httr::GET(
full_url,
accept_json(),
query = list(
recording_mbids = mbid,
algorithm = algo
)
)
return(resp)
}
resp<-find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
resp
resp$content
content(resp, as="parsed")
content(resp, as="parsed")
parsed_content(resp)
parsed <- content(resp, as="parsed")
as.data.frame(parsed)
parsed
type(parsed)
typeof(parsed)
t(parsed)
rbind
do.call(rbind.data.frame, parsed)
parsed
unlist(parsed)
sapply(pparsed, c)
sapply(parsed, c)
t(sapply(parsed, c))
data.frame(t(sapply(parsed, c)))
require(httr)
require(data.table)
api_configs <- function() {
conf <- new.env()
conf[["labs_endpoint"]] = "https://labs.api.listenbrainz.org/"
return(conf)
}
find_similar <- function(mbid, algo = "session_based_days_9000_session_300_contribution_5_threshold_15_limit_50_skip_30") {
conf <- api_configs()
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
resp <- httr::GET(
full_url,
accept_json(),
query = list(
recording_mbids = mbid,
algorithm = algo
)
)
if(http_error(resp)) {
print("failed getting recs", resp)
return(NULL)
}
parsed <- content(resp, as="parsed")
dt <- data.table(t(sapply(parsed, c)))
return(dt)
}
resp<-find_similar("7db2c09d-345f-46e6-900e-0f4499e29c3d")
resp
resp$recording_mbid[0]
resp$recording_mbid[1]
resp$recording_mbid[2]
resp$recording_mbid[3]
resp$recording_mbid[4]
resp$recording_mbid[[4]]
resp$recording_mbid[1:2]
conf <- api_configs()
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
resp <- httr::GET(
full_url,
accept_json(),
query = list(
recording_mbids = mbid,
algorithm = algo
)
)
if(http_error(resp)) {
print("failed getting recs", resp)
return(NULL)
}
mbid = 7db2c09d-345f-46e6-900e-0f4499e29c3d"
mbid <- 7db2c09d-345f-46e6-900e-0f4499e29c3d"
mbid <- "7db2c09d-345f-46e6-900e-0f4499e29c3d"
conf <- api_configs()
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
resp <- httr::GET(
full_url,
accept_json(),
query = list(
recording_mbids = mbid,
algorithm = algo
)
)
if(http_error(resp)) {
print("failed getting recs", resp)
return(NULL)
}
conf <- api_configs()
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
resp <- httr::GET(
full_url,
accept_json(),
query = list(
recording_mbids = mbid,
algorithm = algo
)
)
algo <- "session_based_days_9000_session_300_contribution_5_threshold_15_limit_50_skip_30"
conf <- api_configs()
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
resp <- httr::GET(
full_url,
accept_json(),
query = list(
recording_mbids = mbid,
algorithm = algo
)
)
parsed <- content(resp, as="parsed")
sapply(parsed,c)
data.frame(sapply(parsed,c))
t(data.frame(sapply(parsed,c)))
data.table(t(data.frame(sapply(parsed,c))))
data.table(t(data.frame(sapply(parsed,c))))
dt <- data.table(t(sapply(parsed, c)))
dt
dt$recording_mbid
dt$recording_mbid[0]
dt$recording_mbid[1]
dt$recording_mbid[2]
dt$recording_mbid[1]
dt$recording_mbid[1][1]
dt$recording_mbid[[1]
]
dt$recording_mbid[[1]]
require(httr)
require(data.table)
api_configs <- function() {
conf <- new.env()
conf[["labs_endpoint"]] = "https://labs.api.listenbrainz.org/"
return(conf)
}
find_similar <- function(mbid, algo = "session_based_days_9000_session_300_contribution_5_threshold_15_limit_50_skip_30") {
conf <- api_configs()
full_url <- paste0(conf[["labs_endpoint"]],"similar-recordings/json")
resp <- httr::GET(
full_url,
accept_json(),
query = list(
recording_mbids = mbid,
algorithm = algo
)
)
if(http_error(resp)) {
print("failed getting recs", resp)
return(NULL)
}
parsed <- content(resp, as="parsed")
dt <- data.table(t(sapply(parsed, c)))
return(dt)
}
source("./libs/data_getters.R")
source("./libs/data_getters.R")
source("libs/data_getters.R")
getwd()
source("libs/data_getters.r")
generations <- list()
for(i in 2:10) {
print(i)
}
sample(generations[[i-1]], samples)
i <- 2
sample(generations[[i-1]], samples)
generations <- list()
start_seed <- "7db2c09d-345f-46e6-900e-0f4499e29c3d"
generations[[1]] = find_similar(start_seed)
samples <- 3
